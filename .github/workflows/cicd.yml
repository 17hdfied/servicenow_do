# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  ServiceNowDevOpsChange:
    needs: build  # Ensure this job waits for the 'build' job to complete
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change'
    
    steps:
      - name: ServiceNow Change
        uses: ServiceNow/servicenow-devops-change@v3.0.0
        with:
        # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
        # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
        # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        # GitHub Context
          context-github: ${{ toJSON(github) }}
        # Display Name of the Job
          job-name: 'ServiceNow DevOps Change'
          change-request: '{"setCloseCode":"true","attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
